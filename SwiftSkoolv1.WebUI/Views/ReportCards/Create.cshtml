@model SwiftSkoolv1.Domain.ReportCardVm
@using SwiftSkool.Extensions

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "ReportCards", FormMethod.Post, new { enctype = "multipart/form-data", id="myform" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ReportCard</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TermName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SessionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SessionName", (SelectList)ViewBag.SessionName, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SchoolOpened, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SchoolOpened, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SchoolOpened, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NextTermBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NextTermBegin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NextTermBegin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NextTermEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NextTermEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NextTermEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-3" })

            <div class="editor-field">
                @Html.FileFor(model => model.File)
                @Html.ValidationMessageFor(model => model.File)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="reset" id="btnsubmit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script>
    $(document).ready(function () {
        //window.alert("ready");

        $("#btnsubmit").click(function() {
            // window.alert("ready");

            $("#loaderDiv").show();

            var data = $("#myform").serialize();
            debugger
            $.ajax({
                type: "POST",
                url: "/ReportCards/Create",
                data: data,
                success: function(response) {
                    $("#loaderDiv").hide();
                    alertify.success('Report Card Created Successfully');
                }
            });
        });
    })
</script>
