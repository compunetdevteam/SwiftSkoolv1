@model SwiftSkoolv1.WebUI.ViewModels.AssignSubjectViewModel


<form id="myform" onsubmit="return false;">
    @Html.AntiForgeryToken()


    <div class="card">
        <div class="card-block">
            @if (Model != null && Model.AssignSubjectId > 0)
            {
                <div class="form-header  purple darken-4">
                    <h3>
                        <i class="fa fa-save"></i> Update Record
                    </h3>
                </div>
            }
            else
            {
                <div class="form-header  purple darken-4">
                    <h3><i class="fa fa-save"></i> Save</h3>
                </div>
            }



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null && Model.AssignSubjectId > 0)
            {
                @Html.HiddenFor(model => model.AssignSubjectId)
            }


            @Html.ValidationSummary(true, "", new { @class = "form text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ClassName", (SelectList)ViewBag.ClassName, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TermName, "TermName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TermName", null, htmlAttributes: new { @class = "mdb-select", @multiple = "true" })
                    @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "mdb-select", multiple = true })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="md-form">
                
                @if (Model != null && Model.AssignSubjectId > 0)
                {
                    <input id="btnsubmit" type="submit" value="Update" class="btn btn-info" />
                }
                else
                {
                    <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
                }
                <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
              
            </div>
        </div>



    </div>
</form>
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<script type="text/javascript">
    $('.mdb-select').material_select();
    $("#btnsubmit").click(function () {

        var data = $("#myform").serialize();

        $.ajax({
            type: "POST",
            url: "/AssignSubjects/Save",
            data: data,
            success: function (data) {
                if (data.status) {
                    $('#actionsList').modal("hide");
                    
                    window.oTable.ajax.reload(); //run my_fun() ondomready
                    toastr["success"](data.message);
                    $('#myform')[0].reset();
                } else {
                    //$('#actionsList').modal("hide");
                    toastr["error"](data.message);
                }

            }
        });
    });


</script>




