@model SwiftSkool.ViewModel.PsycomotorViewModel


@{
    ViewBag.Title = "Create";
}


@*@using (Ajax.BeginForm("Create", "Affectives", null, new AjaxOptions
    {
        HttpMethod ="POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "formData"
    }))*@
@using (Html.BeginForm("Create", "Psychomotors", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-4">
                <label>Student Name</label>
            </div>
            <div class="col-md-8">
                @Html.Editor("StudentId", (string)(ViewBag.StudentName), new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label>Term Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Session Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("SessionName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4">
                <label>Class Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("ClassName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4">
                <label>Sports</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Sports, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sports, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Extra Curricular Activity</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.ExtraCurricularActivity, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExtraCurricularActivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Assignment</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Assignment, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Assignment, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-4">
                <label>Helping Others</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.HelpingOthers, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HelpingOthers, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-4">
                <label>Manual Duty</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.ManualDuty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManualDuty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Level of Commitment </label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.LevelOfCommitment, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelOfCommitment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Create" class="use-ajax btn btn-default" />
            </div>
        </div>
    </div>
}


@*<script type="text/javascript">
        $(document).on("click", ".use-ajax", function () {
            e.preventDefault();
            var form = $(this).closest('form');
            $(form).submit();
        })
    </script>*@