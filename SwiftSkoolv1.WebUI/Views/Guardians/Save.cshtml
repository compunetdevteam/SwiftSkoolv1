@model SwiftSkoolv1.WebUI.ViewModels.GuardianViewModel


<form id="myform" onsubmit="return false;">
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-block">
            @if (Model != null && Model.GuardianId > 0)
            {
                <div class="form-header  purple darken-4">
                    <h3>
                        <i class="fa fa-save"></i> Update Record
                    </h3>
                </div>
            }
            else
            {
                <div class="form-header  purple darken-4">
                    <h3><i class="fa fa-save"></i> Save</h3>
                </div>
            }



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null && Model.GuardianId > 0)
            {
                @Html.HiddenFor(model => model.GuardianId)
            }


            @Html.ValidationSummary(true, "", new { @class = "form text-danger" })

            <div class="md-form">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.StudentId)
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })

            </div>
            <div class="md-form">
                @Html.EnumDropDownListFor(model => model.Salutation, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.Salutation)
                @Html.ValidationMessageFor(model => model.Salutation, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.MiddleName)
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.Gender)
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.PhoneNumber)
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Occupation)
                @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EnumDropDownListFor(model => model.Relationship, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.Relationship)
                @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EnumDropDownListFor(model => model.Religion, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.Religion)
                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.LGAOforigin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.LGAOforigin)
                @Html.ValidationMessageFor(model => model.LGAOforigin, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EnumDropDownListFor(model => model.StateOfOrigin, htmlAttributes: new { @class = "mdb-select" })
                @Html.LabelFor(model => model.StateOfOrigin)
                @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.MotherName)
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })

            </div>

            <div class="md-form">
                @Html.EditorFor(model => model.MotherMaidenName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.MotherMaidenName)
                @Html.ValidationMessageFor(model => model.MotherMaidenName, "", new { @class = "text-danger" })

            </div>




            <div class="md-form">

                @if (Model != null && Model.GuardianId > 0)
                {
                    <input id="btnsubmit" type="submit" value="Update" class="btn btn-info" />
                }
                else
                {
                    <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
                }
                <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>

            </div>
        </div>



    </div>
</form>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $('.mdb-select').material_select();
    $("#btnsubmit").click(function () {

        var data = $("#myform").serialize();

        $.ajax({
            type: "POST",
            url: "/Guardians/Save",
            data: data,
            success: function (data) {
                if (data.status) {
                    $('#actionsList').modal("hide");

                    window.oTable.ajax.reload(); //run my_fun() ondomready
                    toastr["success"](data.message);
                    $('#myform')[0].reset();
                } else {
                    //$('#actionsList').modal("hide");
                    toastr["error"](data.message);
                }

            }
        });
    });


</script>





