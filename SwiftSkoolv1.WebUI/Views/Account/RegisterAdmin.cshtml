@model SwiftSkoolv1.WebUI.Models.RegisterAdminVm
@{
    ViewBag.Title = "RegisterAdmin";
}
<header class="section-header">
    <div class="tbl">
        <div class="tbl-row">
            <div class="tbl-cell">
                <h2>Register Admin</h2>
                <div class="subtitle">Create admin for Schools</div>
            </div>
        </div>
    </div>
</header>
<div class="card">
    <div class="admin-panel info-admin-panel">
        <!-- Card title -->
        <div class="view primary-color">
            <h5></h5>
        </div>
        <div class="row">
            <div class="col-md-2">

            </div>
            <div class="col-md-7">

                <form id="myform" onsubmit="return false;">
            
                    @Html.AntiForgeryToken()
                    <br />
                    <br />

                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName)
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName)
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>



                    <div class="form-group">
                        @Html.Label("School Name")
                        @Html.DropDownList("SchoolId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword)
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 text-center">
                            <input id="btnsubmit" type="submit" value="Register Admin" class="btn btn-lg btn-info" />
                        </div>
                    </div>



                </form>

            </div>
            <div class="col-md-3">

            </div>

        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $("#btnsubmit").click(function () {

            var data = $("#myform").serialize();

            $.ajax({
                type: "POST",
                url: "/Account/RegisterAdmin",
                data: data,
                success: function (data) {
                    if (data.status) {
                        toastr["success"](data.message);
                        $('#myform')[0].reset();
                      
                        getConfirmation();
                    } else {
                        //$('#actionsList').modal("hide");
                        toastr["error"]("Subject code and Name are required field");
                    }

                }
            });
        });

        function getConfirmation(){
            var retVal = confirm("Do you want to Add more Admin ?");
            if( retVal == true ){
                return true;
            }
            else{
                window.open('@Url.Action("AdminIndex", "Account")', '_self');
                return false;
            }
        }
    </script>
}

