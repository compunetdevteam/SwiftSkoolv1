@model List<SwiftSkoolv1.WebUI.Models.CaSetUp>
@{
    ViewBag.Title = "EditAll";
}



@using (Html.BeginForm("EditAll", "CaSetUps", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))

    {
    @Html.AntiForgeryToken()
    <table class="table table-responsive">
        <tr>
            <th>
                Enable C A
            </th>
            @*<th>
                School Class
            </th>
            <th>
                Term Name
            </th>
            <th>
                C A Order
            </th>*@
            <th>
                C A Caption
            </th>
            <th>
                Maximum Score
            </th>
            <th>
                CA Percentage
            </th>

            <th></th>
        </tr>


        @for (int i = 0; i < Model.Count; i++)
        {
            @Html.HiddenFor(model => Model[i].CaSetUpId)
            @Html.HiddenFor(model => Model[i].CaOrder)
            @Html.HiddenFor(model => Model[i].ClassName)
            @Html.HiddenFor(model => Model[i].TermName)
            @*@Html.TextBoxFor(model => Model[i].ClassName, new {style = "display:none"})
            @Html.TextBoxFor(model => Model[i].TermName, new {style = "display:none"})*@
            @*@Html.TextBoxFor(model => Model[i].CaSetUpId, new {style = "display:none"})*@


            <tr>
               
              
                <td>
                    @*<fieldset class="form-group">*@
                        @Html.DisplayFor(model => Model[i].IsTrue, new {htmlAttributes = new {@disabled = "disabled"}})
                        <label>Enable CA</label>
                    @*</fieldset>*@
                    @*@Html.CheckBoxFor(model => Model[i].IsTrue, new {htmlAttributes = new {@class = "form-control", @disabled="false"}})*@
                </td>
                @*@*<td>
                    @Html.TextBoxFor(model => Model[i].ClassName, new {style = "display:none"})
                    @Html.EditorFor(model => Model[i].ClassName, new {htmlAttributes = new {@class = "form-control"}})
                </td>
                <td>
                    @Html.TextBoxFor(model => Model[i].TermName, new {style = "display:none"})
                    @Html.EditorFor(model => Model[i].TermName, new {htmlAttributes = new {@class = "form-control"}})

                </td>
                <td>
                    @Html.EditorFor(model => Model[i].CaOrder, new {htmlAttributes = new {@class = "form-control"}})
                </td>*@
                <td>
                    @Html.EditorFor(model => Model[i].CaCaption, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => Model[i].CaCaption, "", new {@class = "text-danger"})

                </td>
                <td>
                    @Html.EditorFor(model => Model[i].MaximumScore, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => Model[i].MaximumScore, "", new {@class = "text-danger"})
                </td>
                <td>
                    @Html.EditorFor(model => Model[i].CaPercentage, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => Model[i].CaPercentage, "", new {@class = "text-danger"})
                </td>
                @*<td>
                    @Html.ActionLink("Edit", "Edit", new {id = Model[i].CaSetUpId}) |
                </td>*@
            </tr>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>

    </table>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

