@model IEnumerable<SwiftSkoolv1.WebUI.Models.CaSetUp>


<style>
    span.field-validation-error {
        color: red;
    }
</style>




@*<div class="tablecontainer" style="width: 90%; margin: 0 auto">
        <a onclick="myFunction()" class="btn btn-primary btn-lg"> <i class="fa fa-plus left"></i> Create CA</a>
        @*<a class="popup" href="/Subjects/Save/0" style="margin-bottom: 20px; margin-top: 20px">Add</a>*
        <table id="Jdatatable" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Full Class Name</th>
                    <th>Term</th>
                    <th>Ca Order</th>
                    <th>CA Caption</th>
                    <th>Maximun Score</th>
                    <th>Actions</th>

                </tr>
            </thead>
        </table>
    </div>*@

<div class="row">

    @using (Html.BeginForm("Index", "CaSetUps", FormMethod.Get, new { @class = "form-inline" }))
    {
        <!-- BEGIN INLINE FORM -->
        <div class="row">
            <div class="col-md-4">
                <article class="margin-bottom-xxl">
                    <p class="lead">
                        Please use the box below to search
                    </p>
                </article>
            </div><!--end .col -->
            <div class="col-md-3">

                <div class="md-form">
                    @Html.DropDownList("ClassName", (SelectList)ViewBag.ClassName, "", new { @class = "mdb-select" })
                    <label for="ClassName">Class</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "mdb-select" })
                    <label for="TermName">Term Name</label>
                </div>
            </div>
            <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
            <span><a href="#" onclick="myFunction()" class="btn btn-primary">Add New SetUp</a></span>
        </div><!--end .card-body -->





    }

</div>


<!-- Modal -->
<div class="modal fade modal-bf-fh" id="actionsList" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <!--Content-->
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <div class="flex-center">
                    <h4 class="modal-title">CA Test</h4>
                </div>
            </div>
            <!--Body-->
            <div class="modal-body" id="myModalDivBody">

            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<!-- /.Modal-->







<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ClassName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TermName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaOrder)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CaCaption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaximumScore)
        </th>
        <th>
            Is Enabled
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TermName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CaOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CaCaption)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaximumScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsTrue)
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.CaSetUpId }) |
                    @Html.ActionLink("Details", "Details", new { id=item.CaSetUpId }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.CaSetUpId })
                </td>*@
        </tr>
    }

</table>


<script src="~/Scripts/jquery-3.1.1.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {


        window.oTable = $("#Jdatatable").DataTable({
            "processing": true, // for show progress bar while loading
            "serverSide": true, // if it is true the preocess is done on server side
            "filter": true, // disables search box
            "info": true,
            "stateSave": true,
            "orderMulti": false, // disable multiple column loading at once
            "ajax": {
                "url": "/CaSetUps/GetIndex",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "TermName", "autoWidth": true },
                { "data": "CaOrder", "autoWidth": true },
                { "data": "CaCaption", "autoWidth": true },
                { "data": "ClassName", "autoWidth": true },
                {
                    "data": "CaSetUpId",
                    "autoWidth": true,
                    "render": function (data) {
                        return '<a href="#" onclick="Edit(' + data + ')" ><i class="fa fa-pencil" aria-hidden="true" ><i/></a>' +
                            '<a class="text-danger" href="#" onclick="Delete(' + data + ')" ><i class="fa fa-remove" aria-hidden="true" ><i/></a>';

                    }
                }
                //{
                //    "data": "SubjectId",
                //    "autoWidth": true,
                //    "render": function(data) {
                //        return '<a class="text-danger" href="#" onclick="Delete(' + data + ')" ><i class="fa fa-remove" aria-hidden="true" ><i/></a>';
                //    }
                //}
                //{ "data": "EmailID", "autoWidth": true },
                //{ "data": "Phone", "autoWidth": true },
            ]
        });

    });
    function Edit(caSetUpId) {
        var url = "/CaSetUps/Save?id=" + caSetUpId;
        //$('#actionsList').modal("show");
        //window.alert(url);
        $('#myModalDivBody').load(url,
            function () {
                $('#actionsList').modal("show");
            });
    };
    function Delete(caSetUpId) {
        var url = "/CaSetUps/Delete?id=" + caSetUpId;
        //$('#actionsList').modal("show");
        //window.alert(url);
        $('#myModalDivBody').load(url,
            function () {
                $('#actionsList').modal("show");
            });
    };
    function myFunction() {
        var url = "/CaSetUps/SelectEdit";
        //$('#actionsList').modal("show");
        // window.alert(url);
        $('#myModalDivBody').load(url,
            function () {
                $('#actionsList').modal("show");
            });
    };
</script>