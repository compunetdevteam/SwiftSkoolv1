@*@model IEnumerable<SwiftSkool.Models.Subject>*@
@model SwiftSkoolv1.Domain.Subject

<style>
    span.field-validation-error {
        color: red;
    }
</style>



@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SubjectCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubjectName)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.SubjectUnit)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.SubjectCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SubjectName)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.SubjectUnit)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.SubjectId }) |
            @Html.ActionLink("Details", "Details", new { id=item.SubjectId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.SubjectId })
        </td>
    </tr>
}

</table>*@


<div class="tablecontainer" style="width: 90%; margin: 0 auto">
    <a href="/Subjects/Save/0" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#actionsList"><i class="fa fa-plus left"></i> Add Subject</a>
    @*<a class="popup" href="/Subjects/Save/0" style="margin-bottom: 20px; margin-top: 20px">Add</a>*@
    <table id="Jdatatable" class="table table-striped table-hover">
        <thead>
        <tr>
            <th class="sort-alpha">Subject Code</th>
            <th class="sort-alpha">Subject Name</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
        </thead>
    </table>
</div>
<!-- Modal -->
<div class="modal fade modal-bf-fh" id="actionsList" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <!--Content-->
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <div class="flex-center">
                    <h4 class="modal-title">Create Subject</h4>
                </div>
            </div>
            <!--Body-->
            <div class="modal-body">

                <form id="myform">
                    
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                       
                       
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*@if(Model != null && Model.SubjectId > 0)
                {
                    @Html.HiddenFor(model => model.SubjectId)
                }*@


                        <div class="form-group">
                            @Html.LabelFor(model => model.SubjectCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SubjectCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SubjectCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                    @Html.LabelFor(model => model.SubjectUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubjectUnit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubjectUnit, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnsubmit" type="reset" value="Save" class="btn btn-default" />

                                <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
                            </div>
                        </div>
                    </div>
                </form>


            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<!-- /.Modal-->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
@*<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

<script type="text/javascript">
    $(document).ready(function () {
        toastr.options = {
            "closeButton": true, // true/false
            "debug": false, // true/false
            "newestOnTop": false, // true/false
            "progressBar": false, // true/false
            "positionClass": "toast-bottom-right", // toast-top-right / toast-top-left / toast-bottom-right / toast-bottom-left
            "preventDuplicates": false, //true/false
            "onclick": null,
            "showDuration": "300", // in milliseconds
            "hideDuration": "1000", // in milliseconds
            "timeOut": "5000", // in milliseconds
            "extendedTimeOut": "1000", // in milliseconds
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

  
        //debugger;
        //$("#Jdatatable").DataTable({
        //    "processing": true, // for show progress bar while loading
        //    "serverSide": true, // if it is true the preocess is done on server side
        //    "filter": false, // disables search box
        //    "orderMulti": false, // disable multiple column loading at once
        //    "ajax": {
        //        "url": "/Sessions/GetIndex",
        //        "type": "POST",
        //        "datatype": "json"
        //    },
        //var oTable = $("#Jdatatable").DataTable({
        //    // "processing": true, // for show progress bar while loading
        //    "ajax": {
        //        "url": "/Subjects/GetIndex",
        //        "type": "GET",
        //        "datatype": "json"
        //    },
        var oTable = $("#Jdatatable").DataTable({
            "processing": true, // for show progress bar while loading
            "serverSide": true, // if it is true the preocess is done on server side
            "filter": true, // disables search box
            "info": true,
            "stateSave": true,
            "orderMulti": false, // disable multiple column loading at once
            "ajax": {
                "url": "/Subjects/GetIndex",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "SubjectCode", "autoWidth": true },
                { "data": "SubjectName", "autoWidth": true },
                {
                    "data": "SubjectId",
                    "autoWidth": true,
                    "render": function(data) {
                        return '<a class="popup" href="/subjects/save/' + data + '"><span class="md-mode-edit"> Edit</a>';
                    }
                },
                {
                    "data": "SubjectId",
                    "autoWidth": true,
                    "render": function(data) {
                        return '<a class="popup" href="/subjects/delete/' + data + '"><span class="md-delete"></span> Delete</a>';
                    }
                }
                //{ "data": "EmailID", "autoWidth": true },
                //{ "data": "Phone", "autoWidth": true },
            ]
        });

        $("#btnsubmit").click(function () {
            
            // window.alert("ready");
            // $('#actionsList').modal('hide');
            var data = $("#myform").serialize();
                
            $.ajax({
                type: "POST",
                url: "/Subjects/Save",
                data: data,
                success: function (data) {
                    if (data.status) {
                        $('#actionsList').modal("hide");
                        $("#loaderDiv").hide();
                        oTable.ajax.reload();
                        toastr["info"]("Subject Saved Successfully!");
                    }
                    toastr["danger"]("Subject not Successfully!");
                }
            });
        });

        $('.tablecontainer').on('click',
            'a.popup',
            function(e) {
                e.preventDefault();
                OpenPopup($(this).attr('href'));
            });

        function OpenPopup(pageUrl) {
            var $pageContent = $('<div/>');
            $pageContent.load(pageUrl,
                function() {
                    $('#popupForm', $pageContent).removeData('validator');
                    $('#popupForm', $pageContent).removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse('form');

                });

            $dialog = $('<div class="popupWindow" style="overflow:auto"></div>')
                .html($pageContent)
                .dialog({
                    draggable: false,
                    autoOpen: false,
                    resizable: true,
                    model: true,
                    title: 'Subject Dialog Box',
                    height: 400,
                    width: 500,
                    close: function() {
                        $dialog.dialog('destroy').remove();
                    }
                });

      

            $('.popupWindow').on('submit',
                '#popupForm',
                function(e) {
                    var url = $('#popupForm')[0].action;
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: $('#popupForm').serialize(),
                        success: function(data) {
                            if (data.status) {
                                $dialog.dialog('close');
                                oTable.ajax.reload();
                                alertify.success(data.message);
                            }
                        }
                    });

                    e.preventDefault();
                });
            $dialog.dialog('open');
        }
    });
</script>
