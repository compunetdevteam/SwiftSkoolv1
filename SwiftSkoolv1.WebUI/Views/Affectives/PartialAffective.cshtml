@model SwiftSkool.ViewModel.AffectiveViewModel



@*@using (Ajax.BeginForm("Create", "Affectives", null, new AjaxOptions
{
    HttpMethod ="POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "formData"
}))*@
@using (Html.BeginForm("Create", "Affectives", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-4">
                <label>Student Name</label>
            </div>
            <div class="col-md-8">
                @Html.Editor("StudentId", (string)(ViewBag.StudentName), new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label>Term Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Session Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("SessionName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4">
                <label>Class Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("ClassName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Honesty</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Honesty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Honesty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label>Self Confidence</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.SelfConfidence, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelfConfidence, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label>Sociability</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Sociability, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sociability, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <label>Punctuality</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Punctuality, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Punctuality, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-4">
                <label>Neatness</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Neatness, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Neatness, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Initiative</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Initiative, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Initiative, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Organization</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Organization, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Attentiveness In Class</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.AttendanceInClass, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AttendanceInClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label>Honesty And Reliability</label>
            </div>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.HonestyAndReliability, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HonestyAndReliability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Create" class="use-ajax btn btn-default" />
            </div>
        </div>
    </div>
}


@*<script type="text/javascript">
    $(document).on("click", ".use-ajax", function () {
        e.preventDefault();
        var form = $(this).closest('form');
        $(form).submit();
    })
</script>*@