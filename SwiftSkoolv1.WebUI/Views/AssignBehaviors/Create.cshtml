@model SwiftSkoolv1.Domain.AssignBehaviorVm

@{
	ViewBag.Title = "Create";
}
<script src="~/Scripts/chosen.jquery.min.js"></script>

<div class="card">
<div class="card-block">

    <div class="form-header  purple darken-4">
        <h3>
            <i class="fa fa-save"></i> Assign Behavioral Skill
        </h3>
    </div>

    <form id="myform">
        @Html.AntiForgeryToken()
	
        <div class="form-horizontal">
		
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		
            <div class="form-group">
                @Html.LabelFor(model => model.StudentId)
                <div class="col-md-6">
                    @Html.DropDownList("StudentId", (SelectList)ViewBag.StudentId, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.TermName)
                <div class="col-md-6">
                    @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SessionName)
                <div class="col-md-6">
                    @Html.DropDownList("SessionName", (SelectList)ViewBag.SessionName, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
                </div>
            </div>
		
            <div class="form-group">
                @Html.LabelFor(model => model.NoOfAbsence)
                <div class="col-md-6">
                    @Html.EditorFor(model => model.NoOfAbsence, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfAbsence, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BehaviouralSkillId)
                <div class="col-md-10">
                    @Html.DropDownList("BehaviouralSkillId", null, htmlAttributes: new { @class = "form-control chosen-select", @multiple = "true" })
                    @Html.ValidationMessageFor(model => model.BehaviouralSkillId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SkillScore)
                <div class="col-md-6">
                    @Html.EditorFor(model => model.SkillScore, new { htmlAttributes = new { @class = "form-control", @placeholder="A,B,C" } })
                    @Html.ValidationMessageFor(model => model.SkillScore, "", new { @class = "text-danger" })
                </div>
            </div>
		

            <div class="form-group">
                @Html.LabelFor(model => model.TeacherComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.TeacherComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeacherComment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input type="reset" id="btnsubmit" value="Assign Behaviour" class="btn  btn-raised btn-primary" />
                </div>
            </div>
        </div>
    </form>


</div>
</div>



@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.1.1.min.js"></script>


<script>
    $(document).ready(function () {
        //window.alert("ready");
        $('.chosen-select').chosen();
        $(function () {
            $('.listbox').multiselect({
                includeSelectAllOption: true
            });
        });
        $("#btnsubmit").click(function () {
            // window.alert("ready");

            $("#loaderDiv").show();

            var data = $("#myform").serialize();
            debugger
            $.ajax({
                type: "POST",
                url: "/AssignBehaviors/Create",
                data: data,
                success: function (data) {
                    if (data.status) {
                        $('#actionsList').modal("hide");
                       
                        //window.oTable.ajax.reload(); //run my_fun() ondomready
                        toastr["success"](data.message);
                        $('#myform')[0].reset();
                        window.location.href = "/AssignBehaviors/Index";
                    } else {
                        //$('#actionsList').modal("hide");
                        toastr["error"]("Behavior has not been Assigned");
                    }

                }
            });
        });
    })
</script>

