@using System.Web.Mvc.Html
@using SwiftSkool.Extensions
@model SwiftSkoolv1.Domain.BookVm

@{
    ViewBag.Title = "Create";
}

<h2>Add Book</h2>


@using (Html.BeginForm("Create", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
  
   
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("SubjectName", (SelectList)ViewBag.SubjectName, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownList("ClassName", null, htmlAttributes: new { @class = "form-control chosen-select", multiple = "true" })
            @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Edition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Edition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Edition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BookLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.BookLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BookLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Select Book", htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="editor-field">
            @Html.FileFor(model => model.File)
            @Html.ValidationMessageFor(model => model.File)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-6">
            <input type="submit" value="Create" class="btn btn-primary btn-lg" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
