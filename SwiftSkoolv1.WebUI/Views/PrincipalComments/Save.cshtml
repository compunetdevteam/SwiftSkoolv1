
@model SwiftSkoolv1.Domain.PrincipalComment


<div class="card">
<div class="card-block">
    @if (Model != null && Model.Id > 0)
    {
        <div class="form-header  purple darken-4">
            <h3>
                <i class="fa fa-save"></i> Update Record
            </h3>
        </div>
    }
    else
    {
        <div class="form-header  purple darken-4">
            <h3><i class="fa fa-save"></i> Save</h3>
        </div>
    }


    <form id="myform" onsubmit="return false;">
                    
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
                       
                       
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if(Model != null && Model.Id > 0)
            {
                @Html.HiddenFor(model => model.Id)
            }
            <div class="md-form">
                @Html.LabelFor(model => model.MinimumGrade)
                @Html.EditorFor(model => model.MinimumGrade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinimumGrade, "", new { @class = "text-danger" })
            </div>

            <div class="md-form">
                @Html.LabelFor(model => model.MaximumGrade)
                @Html.EditorFor(model => model.MaximumGrade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaximumGrade, "", new { @class = "text-danger" })
            </div>

            <div class="md-form">
                @Html.LabelFor(model => model.Remark)
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>

            <div class="md-form">
                @Html.LabelFor(model => model.ClassName)
                @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>

            <div class="md-form">
               
                    @if (Model != null && Model.Id > 0)
                    {
                        <input id="btnsubmit" type="submit" value="Update" class="btn btn-info"/>
                    }
                    else
                    {
                        <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
                    }
                    <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
               
            </div>
        </div>
    </form>

</div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
 

    $("#btnsubmit").click(function () {

        var data = $("#myform").serialize();

        $.ajax({
            type: "POST",
            url: "/PrincipalComments/Save",
            data: data,
            success: function (data) {
                if (data.status) {
                    $('#actionsList').modal("hide");
                    // debugger
                    //$.fn.oTable();
                    window.oTable.ajax.reload(); //run my_fun() ondomready
                    //window.location.href = "/Subjects/Index";
                        
                    toastr["success"](data.message);
                    $('#myform')[0].reset();
                } else {
                    //$('#actionsList').modal("hide");
                    toastr["error"]("Some Field Were Not Completed");
                }

            }
        });
    });

 
</script>