@*@model IEnumerable<SwiftSkool.Models.Grade>*@
@model PagedList.IPagedList<SwiftSkool.Models.Grade>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*@using (Html.BeginForm("Index", "Grades", FormMethod.Get, new { @class = "form-inline" }))
    {
        <!-- BEGIN INLINE FORM -->
        <div class="row">
            <div class="col-lg-7">
                <article class="margin-bottom-xxl">
                    <p class="lead">
                        Please use the following parameters to perform Query
                    </p>
                </article>
            </div><!--end .col -->
            <div class="col-lg-12">
                <form class="form-inline">
                    <div class="card">
                        <div class="card-body">

                            <div class="form-group">
                                @Html.DropDownList("ClassName", (SelectList)ViewBag.ClassName, "", new { @class = "form-control" })
                                <label for="ClassName">ClassName</label>
                            </div>

                            <button type="submit" class="btn btn-raised btn-warning-light ink-reaction"><i class="fa fa-search"></i> Search</button>
                        </div><!--end .card-body -->
                    </div><!--end .card -->

                </form>
            </div><!--end .col -->
        </div>

        <!--end .row -->
        <!-- END INLINE FORM -->
    }*@
<table class="table">
    <tr>
        @*<th>
           Class Name
        </th>*@
        <th>
           Grade Name
        </th>
        <th>
            Minimum Value
        </th>
        <th>
            Maximum Value
        </th>
        @*<th>
            Grade Point
        </th>*@
        <th>
            Remark
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            @*<td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.GradeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinimumValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaximumValue)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.GradePoint)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Remark)
            </td>

            <td>
                @*@Html.ActionLink("Edit", "Edit", new {id = item.GradeId}) |
            @Html.ActionLink("Details", "Details", new {id = item.GradeId}) |
            @Html.ActionLink("Delete", "Delete", new {id = item.GradeId})*@
                <span>
                    <a href="@Url.Action("Edit", new {id = item.GradeId, @class = "btn btn-success"})"><span class="md-mode-edit"></span> Edit</a>
                </span> |
                <span>
                    <a href="@Url.Action("Delete", new {id = item.GradeId, @class = "btn btn-success"})"><span class="md-delete"></span> Delete</a>
                </span>
            </td>
        </tr>
    }

</table>

<br />
<div class="btn-group pull-right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder = ViewBag.CurrentSort,
    currentFilter =
    ViewBag.CurrentFilter
}))
</div>
