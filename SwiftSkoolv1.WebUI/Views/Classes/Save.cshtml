
@model SwiftSkoolv1.Domain.Class

<div class="card">
<div class="card-block">
    @if (Model != null && Model.ClassId > 0)
    {
        <div class="form-header  purple darken-4">
            <h3>
                <i class="fa fa-pencil-square-o"></i> Update Record
            </h3>
        </div>
    }
    else
    {
        <div class="form-header  purple darken-4">
            <h3><i class="fa fa-save"></i> Save</h3>
        </div>
    }
    
    <form id="myform" onsubmit="return false;">
        @Html.AntiForgeryToken()


        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null && Model.ClassId > 0)
            {
                @Html.HiddenFor(model => model.ClassId)
            }


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("School Class")
                <div class="col-md-10">
                    @Html.DropDownList("SchoolName", (SelectList)ViewBag.SchoolName, "", new { @class = "mdb-select" })
                    @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Level")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Class Type")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                    @if (Model != null && Model.ClassId > 0)
                    {
                        <input id="btnsubmit" type="submit" value="Update" class="btn btn-info" />
                    }
                    else
                    {
                        <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
                    }
                    <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
            
            </div>
        </div>
    </form>

</div>
    </div>




    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script type="text/javascript">
        $('.mdb-select').material_select();

        $("#btnsubmit").click(function () {

            var data = $("#myform").serialize();

            $.ajax({
                type: "POST",
                url: "/Classes/Save",
                data: data,
                success: function (data) {
                    if (data.status) {
                        $('#actionsList').modal("hide");
                        // debugger
                        //$.fn.oTable();
                        window.oTable.ajax.reload(); //run my_fun() ondomready
                        //window.location.href = "/Subjects/Index";

                        toastr["success"](data.message);
                        $('#myform')[0].reset();
                    } else {
                        //$('#actionsList').modal("hide");
                        toastr["error"]("Subject code and Name are required field");
                    }

                }
            });
        });


    </script>
