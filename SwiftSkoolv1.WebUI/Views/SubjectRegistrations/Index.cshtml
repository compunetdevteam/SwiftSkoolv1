@model IEnumerable<SwiftSkoolv1.Domain.SubjectRegistration>

@{
    ViewBag.Title = "Index";
}

<div class="card contact-card card-cascade narrower mb-r">
    <div class="admin-panel info-admin-panel">
        <!-- Card title -->
        <div class="view primary-color">
            <h5> Student Subject List</h5>
        </div>
        <br />
        <br />

        @using (Html.BeginForm("Index", "SubjectRegistrations", FormMethod.Get, new { @class = "form-inline" }))
        {
        <!-- BEGIN INLINE FORM -->
            <div class="row">
                <div class="col-md-6">
                    <article class="margin-bottom-xxl">
                        <p class="lead">
                            Please use the box below to search
                        </p>
                    </article>
                </div><!--end .col -->
                <div class="col-md-6">
                    <form class="form-inline">
                        <div class="md-form">
                           
                            @Html.DropDownList("StudentId", (SelectList)ViewBag.StudentId, "", new { @class = "mdb-select" })
                            @Html.Label("Student Name")
                        </div>
                        <div class="md-form">
                            <button type="submit" class="btn btn-raised btn-warning-light ink-reaction"><i class="fa fa-search"></i> Search</button>
                        </div>
                    </form>
                </div><!--end .col -->
            </div>

        <!--end .row -->
        <!-- END INLINE FORM -->
        }
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.StudentId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudentName)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.ClassName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TermName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SessionName)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Subject.SubjectName)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentName)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ClassName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TermName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SessionName)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Subject.SubjectName)
                    </td>
                    <td>

                        <span>
                            <a href="@Url.Action("Edit", new {id = item.Id, @class = "btn btn-success" })"><span class="md-mode-edit"></span> Edit</a>
                        </span> |
                        <span>
                            <a href="@Url.Action("Delete", new {id = item.Id, @class = "btn btn-success" })"><span class="md-delete"></span> Delete</a>
                        </span>
                    </td>
                </tr>
            }

        </table>
    </div>
</div>
