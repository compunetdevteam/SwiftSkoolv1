
@model SwiftSkoolv1.WebUI.ViewModels.AssignSubjectTeacherVM


<script src="~/Scripts/chosen.jquery.js"></script>



<form id="myform" onsubmit="return false;">
            @Html.AntiForgeryToken()    
    <div class="card">
    <div class="card-block">
        @if (Model != null && Model.Id > 0)
        {
            <div class="form-header  purple darken-4">
                <h3>
                    <i class="fa fa-save"></i> Update Record
                </h3>
            </div>
        }
        else
        {
            <div class="form-header  purple darken-4">
                <h3><i class="fa fa-save"></i> Save</h3>
            </div>
        }



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null && Model.Id > 0)
        {
            @Html.HiddenFor(model => model.Id)
        }


        <div class="form-horizontal">
               
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectId)
                @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StaffName)
                @Html.DropDownList("StaffName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
            </div>
            @if (Model != null && Model.Id > 0)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassName)
                    @Html.DropDownList("ClassName", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.ClassName, "", new {@class = "text-danger"})
                 
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassName)
                    @Html.DropDownList("ClassName", null, htmlAttributes: new { @class = "form-control", @multiple = "true" })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            }
      
            @*<div class="form-group">
					<div class="editor-label control-label col-md-2">
						@Html.Label("Class Name")
					</div>
					<div class="col-md-10 editor-field">
						@Html.ListBox("ClassName", (MultiSelectList)ViewBag.StudentId)
					</div>
				</div>*@

            <div class="form-group">
                
                @if (Model != null && Model.Id > 0)
                {
                    <input id="btnsubmit" type="submit" value="Update" class="btn btn-info" />
                }
                else
                {
                    <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
                }
                <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
              
            </div>
        </div>
    </div>
    </div>
      </form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $('.form-control').material_select();
    $('.chosen-select').chosen();
    $("#btnsubmit").click(function () {

        var data = $("#myform").serialize();

        $.ajax({
            type: "POST",
            url: "/AssignSubjectTeachers/Save",
            data: data,
            success: function (data) {
                if (data.status) {
                    $('#actionsList').modal("hide");
                    // debugger
                    //$.fn.oTable();
                    window.oTable.ajax.reload(); //run my_fun() ondomready
                    //window.location.href = "/Subjects/Index";

                    toastr["success"](data.message);
                    $('#myform')[0].reset();
                } else {
                    //$('#actionsList').modal("hide");
                    toastr["error"]("Subject has not been Assigned Teacher");
                }

            }
        });
    });


</script>

