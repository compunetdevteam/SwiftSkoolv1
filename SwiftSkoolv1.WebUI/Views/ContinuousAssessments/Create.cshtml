@model SwiftSkool.ViewModel.ContinuousAssesmentViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Continuous Assessment</h2>
<div class="row">
    <div class="col-md-1">

    </div>
    <div class="col-md-6">
        <form id="myform theform">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       ccc
                        @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubjectId", (SelectList)ViewBag.SubjectId, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TermName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TermName", (SelectList)ViewBag.TermName, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SessionName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SessionName", (SelectList)ViewBag.SessionName, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassName", (SelectList)ViewBag.ClassName, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstTest, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstTest, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstTest, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SecondTest, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SecondTest, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SecondTest, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ThirdTest, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ThirdTest, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThirdTest, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.ExamScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExamScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExamScore, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("StaffName", (string)(ViewBag.StaffName), new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnsubmit" type="reset" value="Create Continuous Assemement" class="btn btn-raised btn-primary" />
                    </div>
                </div>
            </div>
    </form>

    </div>
    <div class="col-md-5">

    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@* ajax function for submiting start *@
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script>
    $(document).ready(function () {
        //window.alert("ready");

        $("#btnsubmit").click(function () {
            // window.alert("ready");

            $("#loaderDiv").show();

            var data = $("#myform").serialize();
            debugger
            $.ajax({
                type: "POST",
                url: "/ContinuousAssesment/Create",
                data: data,
                success: function (response) {
                    $("#loaderDiv").hide();
                    alertify.success('Continuous Assessment Created Successfully');
                }
            });
        });
    })
</script>

@* end of ajax *@

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script type="text/javascript">
    $(function () {
        $('#theform').submit(function () {
            $("input[type='submit']", this)
              .val("Processing, Please Wait...")
              .attr('disabled', 'disabled');
            return true;
        });
    });
</script>