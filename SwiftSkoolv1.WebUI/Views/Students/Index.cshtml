@*@model IEnumerable<SwiftSkool.Models.Student>*@
@model PagedList.IPagedList<SwiftSkool.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Student List</h2>
@if (ViewBag.Message != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>@ViewBag.Message</strong>
    </div>
}

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
   @if (Request.IsAuthenticated && User.IsInRole("Admin"))
   {
    using (Html.BeginForm("Index", "Students", FormMethod.Get))
    {
        <div class="form-group">
            <input type="text" class="form-control" name="search" placeholder="Enter your keyword">
        </div>
        <button type="submit" class="btn btn-icon-toggle ink-reaction"><i class="fa fa-search"></i></button>
    }
   }


<table id="datatable2" class="table table-striped table-hover">
    <tr>
        <th>
            Student ID
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.FirstName)*@
        </th>
        <th>
            Last Name
        </th>
        <th>
            @Html.ActionLink("Admission Date", "Index", new { sortOrder = ViewBag.NameSortParm })

        </th>
        <th>
            Gender
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdmissionDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>

            <td>
                @*@Html.ActionLink("Print", "Print", new { id = item.StudentId }) |*@
                @*@Html.ActionLink("Edit", "Edit", new { id=item.StudentId }) |
                    @Html.ActionLink("Details", "Details", new { id=item.StudentId }) |*@
                @*@Html.ActionLink("Download Second Term Result", "PrintSecondTerm", new
                    {
                        FileId = item.StudentId
                    })*@

                <span>
                    <a href="@Url.Action("Details", new {id = item.StudentId, @class = "btn btn-success" })"><span class="md-details"></span> Details</a>
                </span>
                @*@Html.ActionLink("Delete", "Delete", new {id = item.ClassId})*@
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <span>
                        <a href="@Url.Action("Edit", new {id = item.StudentId, @class = "btn btn-success" })"><span class="md-mode-edit"></span> Edit</a>
                    </span>
                    <a href="@Url.Action("Delete", new {id = item.StudentId, @class = "btn btn-success" })"><span class="md-delete"></span> Delete</a>
                }
            </td>
        </tr>
    }

</table>

<br />
<div class="btn-group pull-right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder = ViewBag.CurrentSort,
    currentFilter =
    ViewBag.CurrentFilter
}))
    </div>
